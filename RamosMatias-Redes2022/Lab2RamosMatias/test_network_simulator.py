from NetworkSimulator import * 
import pytest

@pytest.mark.parametrize(
	"entities, network, expected",
	[
		(4, [	
			[0,	1,	3,	7],
			[1,	0,	1,	999],
			[3,	1,	0,	2],
			[7,	999,2,	0]
		], 
		[
			[0, 1, 2, 4], 
			[1, 0, 1, 3], 
			[2, 1, 0, 2], 
			[4, 3, 2, 0]
		]
		),
		(7, [
			[0, 10, 10, 999, 999, 999, 999],
			[10,0,999,5,3,999,999],
			[10,999,0,50,999,999,999],
			[999,5,50,0,10,999,8],
			[999,3,999,10,0,14,30],
			[999,999,999,999,14,0,999],
			[999,999,999,8,30,999,0]
		], 
		[
			[0,10,10,15,13,27,23],
			[10,0,20,5,3,17,13],
			[10,20,0,25,23,37,33],
			[15,5,25,0,8,22,8],
			[13,3,23,8,0,14,16],
			[27,17,37,22,14,0,30],
			[23,13,33,8,16,30,0]
		]
		),
		(7, [
			[0, 6, 3, 999, 999, 999, 999],
			[6,0,999,6,10,999,999],
			[3,999,0,8,999,999,999],
			[999,6,8,0,4,999,5],
			[999,10,999,4,0,10,2],
			[999,999,999,999,10,0,999],
			[999,999,999,5,2,999,0]
		], 
		[
			[0,6,3,11,15,25,16],
			[6,0,9,6,10,20,11],
			[3,9,0,8,12,22,13],
			[11,6,8,0,4,14,5],
			[15,10,12,4,0,10,2],
			[25,20,22,14,10,0,12],
			[16,11,13,5,2,12,0]
		]
		),
	]
)
def test_run_simulator(entities, network, expected):
	ns = NetworkSimulator(False, 0, 0, entities, network)
	ns.run_simulator()
	print(ns.obtener_costos())
	assert ns.obtener_costos() == expected









