from convert_address import *
import pytest

@pytest.mark.parametrize(
	"address, expected",
	[
		('10000000000010110000001100011111', (('10000000000010110000001100011111', '128.11.3.31', 	'80:0b:03:1f'), '')),
		('00001010000011110111100000000011', (('00001010000011110111100000000011', '10.15.120.3', 	'0a:0f:78:03'), '')),
		('10011100100001000000100000101011', (('10011100100001000000100000101011', '156.132.8.43', 	'9c:84:08:2b'), '')),
		('11000000000100001111111000000001', (('11000000000100001111111000000001', '192.16.254.1', 	'c0:10:fe:01'), '')),
		('11011100011010001100010101100100', (('11011100011010001100010101100100', '220.104.197.100','dc:68:c5:64'), ''))
	]
)
def test_convert_from_binary_address(address, expected):
	assert convert_address(address) == expected

@pytest.mark.parametrize(
	"address, expected",
	[
		('128.11.3.31', 	(('10000000000010110000001100011111', '128.11.3.31', 	'80:0b:03:1f'), '')),
		('10.15.120.3', 	(('00001010000011110111100000000011', '10.15.120.3', 	'0a:0f:78:03'), '')),
		('156.132.8.43', 	(('10011100100001000000100000101011', '156.132.8.43', 	'9c:84:08:2b'), '')),
		('192.16.254.1', 	(('11000000000100001111111000000001', '192.16.254.1', 	'c0:10:fe:01'), '')),
		('220.104.197.100', (('11011100011010001100010101100100', '220.104.197.100','dc:68:c5:64'), ''))
	]
)
def test_convert_from_decimal_address(address, expected):
	assert convert_address(address) == expected

@pytest.mark.parametrize(
	"address, expected",
	[
		('80:0b:03:1f', 	(('10000000000010110000001100011111', '128.11.3.31', 	'80:0b:03:1f'), '')),
		('0a:0f:78:03', 	(('00001010000011110111100000000011', '10.15.120.3', 	'0a:0f:78:03'), '')),
		('9c:84:08:2b', 	(('10011100100001000000100000101011', '156.132.8.43', 	'9c:84:08:2b'), '')),
		('c0:10:fe:01', 	(('11000000000100001111111000000001', '192.16.254.1', 	'c0:10:fe:01'), '')),
		('dc:68:c5:64', 	(('11011100011010001100010101100100', '220.104.197.100','dc:68:c5:64'), ''))
	]
)
def test_convert_from_hexadecimal_address(address, expected):
	assert convert_address(address) == expected
